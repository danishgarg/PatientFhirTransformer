spring.cloud.stream.kafka.streams.binder.configuration.application.id = patient-transformer
spring.cloud.stream.kafka.streams.binder.configuration.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
#Strong consistency even in the face of failure - Requires atleast three brokers
# spring.cloud.stream.kafka.streams.binder.configuration.processing.guarantee = exactly_once
spring.cloud.stream.kafka.streams.binder.serdeError: logAndContinue

# spring.cloud.stream.bindings.chart-fhir-output.destination = PATIENT-CHART

spring.cloud.stream.bindings.client-cdc-input.destination = CDC-ANET-CLIENT
spring.cloud.stream.bindings.client-cdc-snapshot-out.destination = CDC-SNAPSHOT-CLIENT
spring.cloud.stream.bindings.client-cdc-snapshot-in.destination = CDC-SNAPSHOT-CLIENT

spring.cloud.stream.bindings.chart-cdc-input.destination = CDC-ANET-CHART
spring.cloud.stream.bindings.chart-cdc-snapshot-out.destination = CDC-SNAPSHOT-CHART
spring.cloud.stream.bindings.chart-cdc-snapshot-in.destination = CDC-SNAPSHOT-CHART

spring.cloud.stream.bindings.patient-canonical-snapshot-out-chart-join.destination = PATIENT-CANONICAL-SNAPSHOT
spring.cloud.stream.bindings.patient-canonical-snapshot-out-client-join.destination = PATIENT-CANONICAL-SNAPSHOT
spring.cloud.stream.bindings.patient-canonical-snapshot-in-chart-join.destination = PATIENT-CANONICAL-SNAPSHOT
spring.cloud.stream.bindings.patient-canonical-snapshot-in-client-join.destination = PATIENT-CANONICAL-SNAPSHOT
spring.cloud.stream.bindings.patient-canonical-snapshot-in-stream.destination = PATIENT-CANONICAL-SNAPSHOT

spring.cloud.stream.bindings.patient-fhir-out.destination = PATIENT-FHIR

#spring.cloud.stream.kafka.binder.configuration.key.serializer = org.apache.kafka.common.serialization.StringSerializer
